Practice Machine Learning with Datasets from the UCI Machine Learning Repository
https://machinelearningmastery.com/practice-machine-learning-with-small-in-memory-datasets-from-the-uci-machine-learning-repository/
2015-08-20
Where can you get good datasets to practice machine learning?
Datasets that are real-world so that they are interesting and relevant, although small enough for you to review in Excel and work through on your desktop.
In this post you will discover a database of high-quality, real-world, and well understood machine learning datasets that you can use to practice applied machine learning.
This database is called the UCI machine learning repository and you can use it to structure a self-study program and build a solid foundation in machine learning.
Practice Practice PracticePhoto by Phil Roeder, some rights reserved.
# Why Do We Need Practice Datasets?
If you are interested in practicing applied machine learning, you need datasets on which to practice.
This problem can stop you dead.
- Which dataset should you use?
- Should you collect your own or use one off the shelf?
- Which one and why?
I teach a top-down approach to machine learning where I encourage you to learn a process for working a problem end-to-end, map that process onto a tool and practice the process on data in a targeted way. For more information see my post “Machine Learning for Programmers: Leap from developer to machine learning practitioner“.
I teach that the best way to get started is to practice on datasets that have specific traits.
I recommend you select traits that you will encounter and need to address when you start working on problems of your own such as:
- Different types of supervised learning such as classification and regression.
- Different sized datasets from tens, hundreds, thousands and millions of instances.
- Different numbers of attributes from less than ten, tens, hundreds and thousands of attributes
- Different attribute types from real, integer, categorical, ordinal and mixtures
- Different domains that force you to quickly understand and characterize a new problem in which you have no previous experience.
You can create a program of traits to study and learn about and the algorithm you need to address them, by designing a program of test problem datasets to work through.
Such a program has a number of practical requirements, for example:
- Real-World: The datasets should be drawn from the real world (rather than being contrived). This will keep them interesting and introduce the challenges that come with real data.
- Small: The datasets need to be small so that you can inspect and understand them and that you can run many models quickly to accelerate your learning cycle.
- Well-Understood: There should be a clear idea of what the data contains, why it was collected, what the problem is that needs to be solved so that you can frame your investigation.
- Baseline: It is also important to have an idea of what algorithms are known to perform well and the scores they achieved so that you have a useful point of comparison. This is important when you are getting started and learning because you need quick feedback as to how well you are performing (close to state-of-the-art or something is broken).
- Plentiful: You need many datasets to choose from, both to satisfy the traits you would like to investigate and (if possible) your natural curiosity and interests.
For beginners, you can get everything you need and more in terms of datasets to practice on from the UCI Machine Learning Repository.
# What is the UCI Machine Learning Repository?
The UCI Machine Learning Repository is a database of machine learning problems that you can access for free.
It is hosted and maintained by the Center for Machine Learning and Intelligent Systems at the University of California, Irvine. It was originally created by David Aha as a graduate student at UC Irvine.
For more than 25 years it has been the go-to place for machine learning researchers and machine learning practitioners that need a dataset.
UCI Machine Learning Repository
Each dataset gets its own webpage that lists all the details known about it including any relevant publications that investigate it. The datasets themselves can be downloaded as ASCII files, often the useful CSV format.
For example, here is the webpage for the Abalone Data Set that requires the prediction of the age of abalone from their physical measurements.
Some beneficial features of the library include:
- Almost all datasets are drawn from the domain (as opposed to being synthetic), meaning that they have real-world qualities.
- Datasets cover a wide range of subject matter from biology to particle physics.
- The details of datasets are summarized by aspects like attribute types, number of instances, number of attributes and year published that can be sorted and searched.
- Datasets are well studied which means that they are well known in terms of interesting properties and expected “good” results. This can provide a useful baseline for comparison.
- Most datasets are small (hundreds to thousands of instances) meaning that you can readily load them in a text editor or MS Excel and review them, you can also easily model them quickly on your workstation.
Browse the 300+ datasets using this handy table that supports sorting and searching.
Some criticisms of the repository include:
- The datasets are cleaned, meaning that the researchers that prepared them have often already performed some pre-processing in terms of the the selection of attributes and instances.
- The datasets are small, this is not helpful if you are interested in investigating larger scale problems and techniques.
- There are so many to choose from that you can be frozen by indecision and over-analysis. It can be hard to just pick a dataset and get started when you are unsure if it is a “good dataset” for what you’re investigating.
- Datasets are limited to tabular data, primarily for classification (although clustering and regression datasets are listed). This is limiting for those interested in natural language, computer vision, recommender and other data.
Take a look at the repository homepage as it shows featured datasets, the newest datasets as well as which datasets are currently the most popular.
# A Self-Study Program
So, how can you make the best use of the UCI machine learning repository?
I would advise you to think about the traits in problem datasets that you would like to learn about.
These may be traits that you would like to model (like regression), or algorithms that model these traits that you would like to get more skillful at using (like random forest for multi-class classification).
An example program might look like the following:
- Binary Classification: Pima Indians Diabetes Data Set (available here)
- Multi-Class Classification: Iris Data Set
- Regression: Wine Quality Data Set
- Categorical Attributes: Breast Cancer Data Set
- Integer Attributes: Computer Hardware Data Set
- Classification Cost Function: German Credit Data
- Missing Data: Horse Colic Data Set
This is just a list of traits, can pick and choose your own traits to investigate.
I have listed one dataset for each trait, but you could pick 2-3 different datasets and complete a few small projects to improve your understanding and put in more practice.
For each problem, I would advise that you work it systematically from end-to-end, for example, go through the following steps in the applied machine learning process:
- Define the problem
- Prepare data
- Evaluate algorithms
- Improve results
- Write-up results
Select a systematic and repeatable process that you can use to deliver results consistently.
For more on the process of working through a machine learning problem systematically, see my post titled “Process for working through Machine Learning Problems“.
The write-up is a key part.
It allows you to build up a portfolio of projects that you refer back to as a reference on future projects and get a jump-start, as well as use as a public resume or your growing skills and capabilities in applied machine learning.
For more on building a portfolio of projects, see my post “Build a Machine Learning Portfolio: Complete Small Focused Projects and Demonstrate Your Skills“.
# But, What If…
I don’t know a machine learning tool.
Pick a tool or platform (like Weka, R or scikit-learn) and use this process to learn a tool. Cover off both practicing machine learning and getting good at your tool at the same time.
I don’t know how to program (or code very well).
Use Weka. It has a graphical user interface and no programming is required. I would recommend this to beginners regardless of whether they can program or not because the process of working machine learning problems maps so well onto the platform.
I don’t have the time.
With a strong systematic process and a good tool that covers the whole process, I think that you could work through a problem in one-or-two hours. This means you could complete one project in an evening or over two evenings.
You choose the level of detail to investigate and it is a good idea to keep it light and simple when just starting out.
I don’t have a background in the domain I’m modeling.
The dataset pages provide some background on the dataset. Often you can dive deeper by looking at publications or the information files accompanying the main dataset.
I have little to no experience working through machine learning problems.
Now is your time to start. Pick a systematic process, pick a simple dataset and a tool like Weka and work through your first problem. Place that first stone in your machine learning foundation.
I have no experience at data analysis.
No experience in data analysis is required. The datasets are simple, easy to understand and well explained. You simply need to read up on them using the data sets home page and by looking at the data files themselves.
# Action Step
Select a dataset and get started.
If you are serious about your self-study, consider designing a modest list of traits and corresponding datasets to investigate.
You will learn a lot and build a valuable foundation for diving into more complex and interesting problems.
Did you find this post useful? Leave a comment and let me know.
'''

'''
