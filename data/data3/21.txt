Biggest Mistake I Made When Starting Machine Learning, And How To Avoid It
https://machinelearningmastery.com/biggest-mistake-i-made-when-starting-machine-learning-and-how-to-avoid-it/
2014-03-09
When I first got started in machine learning I implemented algorithms by hand. It was really slow going.
I was a terrible programmer at the time. I was trying to figure out the algorithms from books, how to use them on problems and how to write code – all at the same time. This was the biggest mistake I made when getting started. It made everything 3-times harder and killed my motivation.
A friend of mine suggested I look at Weka. I resisted. I was a student and a C-programmer and I didn’t want to get into Java.
Later, I was looking into decision tree algorithms and I learned that Weka had an implementation of C4.5 (a really powerful method).
I downloaded Weka and discovered that in addition to the Java API, Weka had a fully interactive graphical interface for loading data, running algorithms and reviewing results. Basically, all of the things I was trying to figure out how to do and implement myself, but in a GUI.
Kick-start your project with my new book Machine Learning Mastery With Weka, including step-by-step tutorials and clear screenshots for all examples.
Weka Explorer Interface with the Iris dataset loaded
I was hooked. I started using it for class work and for my own experiments. Later in grad school, I started my own research by writing 3rd-party plugins for Weka (LVQ algorithm and others).
I now recommend it to programmers just getting started because it’s so quick to get meaningful results on a dataset. It also instills best practices like repeatable experiments and statistical methods for comparing results.
If you haven’t already, take a look at Weka.
I have a short tutorial in which you discover how to run a classifier in 5 minutes.
Good luck machine learning!
# Discover Machine Learning Without The Code!
...with just a few a few clicks
Discover how in my new Ebook:
Machine Learning Mastery With Weka
Covers self-study tutorials and end-to-end projects like:
Loading data, visualization, build models, tuning, and much more...
Skip the Academics. Just Results.
See What's Inside

'''

'''
